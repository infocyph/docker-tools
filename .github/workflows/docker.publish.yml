name: Docker Publish

on:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'

jobs:
  push_to_registries:
    name: Push Docker image to Docker Hub and GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            docker.io/infocyph/tools
            ghcr.io/infocyph/tools

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation for Docker Hub
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: docker.io/infocyph/tools
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Generate artifact attestation for GHCR
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ghcr.io/infocyph/tools
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
          github-token: ${{ secrets.GH_TOKEN }}
  update_version:
    name: Update version file and README version block
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Create version.txt
        run: |
          echo "Version: $(date '+%Y-%m-%d %H:%M:%S') - ${{ github.workflow }} (${{ github.run_number }}/${{ github.run_id }})" > version.txt
          cat version.txt

      - name: Update README.md version block
        run: |
          DATE=$(date "+%Y-%m-%d %H:%M:%S")
          awk 'BEGIN {inside=0}
               /<!-- VERSION:START -->/ {print; print "Image Last updated on: " ENVIRON["DATE"]; inside=1; next}
               /<!-- VERSION:END -->/ {print; inside=0; next}
               {if (!inside) print}' README.md > README.tmp
          mv README.tmp README.md
          cat README.md

      - name: Commit
        run: |
          if [[ $(git status --porcelain) ]]; then
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add version.txt README.md
            git commit -m "${{github.workflow}} (${{github.run_number}}/${{github.run_id}})"
            git push
          fi
